---
import StructuredData from "../components/StructuredData.astro";

export interface Props {
	title: string;
	description?: string;
	image?: string;
	canonical?: string;
	noindex?: boolean;
	structuredData?: {
		type: "WebSite" | "BlogPosting" | "Article";
		data: any;
	};
}

const {
	title,
	description = "A blog powered by Creeble and Astro",
	image = `${import.meta.env.BASE_URL}/favicon.svg`,
	canonical,
	noindex = false,
	structuredData,
} = Astro.props;

const canonicalURL =
	canonical ||
	(Astro.site
		? new URL(Astro.url.pathname, Astro.site).toString()
		: Astro.url.toString());
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="generator" content={Astro.generator} />

		<!-- SEO -->
		<title>{title}</title>
		<meta name="description" content={description} />
		<link rel="canonical" href={canonicalURL} />
		{noindex && <meta name="robots" content="noindex, nofollow" />}

		<!-- Favicon -->
		<link rel="icon" type="image/svg+xml" href={`${import.meta.env.BASE_URL.endsWith('/') ? import.meta.env.BASE_URL : import.meta.env.BASE_URL + '/'}favicon.svg`} />
		<link rel="apple-touch-icon" href={`${import.meta.env.BASE_URL.endsWith('/') ? import.meta.env.BASE_URL : import.meta.env.BASE_URL + '/'}favicon.svg`} />

		<!-- Open Graph / Facebook -->
		<meta property="og:type" content="website" />
		<meta property="og:url" content={canonicalURL} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta
			property="og:image"
			content={Astro.site ? new URL(image, Astro.site).toString() : image}
		/>

		<!-- Twitter -->
		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content={canonicalURL} />
		<meta property="twitter:title" content={title} />
		<meta property="twitter:description" content={description} />
		<meta
			property="twitter:image"
			content={Astro.site ? new URL(image, Astro.site).toString() : image}
		/>

		<!-- Theme -->
		<meta name="theme-color" content="#ffffff" />
		<meta name="color-scheme" content="light" />

		<!-- Preload fonts (if you add any) -->
		<!-- <link rel="preload" href="/fonts/font.woff2" as="font" type="font/woff2" crossorigin> -->
		<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Work+Sans:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
		
		<!-- Prism.js CSS -->
		<link href={`${import.meta.env.BASE_URL.endsWith('/') ? import.meta.env.BASE_URL : import.meta.env.BASE_URL + '/'}prism-atom-dark.css`} rel="stylesheet">
		<!-- Structured Data -->
		{
			structuredData && (
				<StructuredData
					type={structuredData.type}
					data={structuredData.data}
				/>
			)
		}
	</head>
	<body>
		<slot />
		<!-- Prism.js JavaScript -->
		<script src="https://cdn.jsdelivr.net/npm/prismjs@1.30.0/components/prism-core.min.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/prismjs@1.30.0/plugins/autoloader/prism-autoloader.min.js"></script>
	</body>
</html>

<style lang="scss" is:global>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;

		color: #1d1d1d;
		background-color: #fdfdfd;

		font-family: "Work Sans", sans-serif;
		font-optical-sizing: auto;
		font-weight: 400;
		font-style: normal;
	}

	a {
		color: #3e54e5;
	}

	p {
		line-height: 1.6;
		margin: 0;
	}

	hr {
		border: none;
		height: 1px;
		background-color: #e0e0e0;
		width: 100%;
	}


	h1, h2, h3, h4, h5, h6 {
		font-family: "Work Sans", sans-serif;
		font-optical-sizing: auto;
		font-weight: 500;
		font-style: normal;
		line-height: 1.6;
		margin: 0;
	}

	h1 {
		font-size: 2.986rem;
	}

	h2 {
		font-size: 2.488rem;
	}

	h3 {
		font-size: 2.074rem;
	}

	h4 {
		font-size: 1.728rem;
	}

	h5 {
		font-size: 1.44rem;
	}

	h6 {
		font-size: 1.2rem;
	}

	.container {
		max-width: 1400px;
		margin: 0 auto;
		padding: 2rem;
	}
</style>
